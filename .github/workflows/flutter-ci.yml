name: Flutter CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: 'stable'
          cache: true
          
      - name: Cache Pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: Cache build outputs
        uses: actions/cache@v3
        with:
          path: |  
            build/
            .dart_tool/
          key: ${{ runner.os }}-build-${{ matrix.build-target }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.build-target }}-
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Verify formatting
        run: flutter format --set-exit-if-changed .
        
      - name: Analyze project source
        run: flutter analyze --fatal-infos --fatal-warnings
        
      - name: Run unit tests
        run: flutter test --coverage
        
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true
        
  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build-target: apk
            output-path: build/app/outputs/flutter-apk/app-release.apk
            artifact-name: release-apk
          - os: macos-latest
            build-target: ios
            output-path: build/ios/iphoneos
            artifact-name: release-ios
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: 'stable'
          cache: true
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build ${{ matrix.build-target }}
        run: |
          if [ "${{ matrix.build-target }}" == "ios" ]; then
            flutter build ios --release --no-codesign
          else
            flutter build ${{ matrix.build-target }} --release
          fi
        
      - name: Upload ${{ matrix.artifact-name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.output-path }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk
          path: ./apk
      
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: ./apk/app-release.apk
          releaseNotes: |
            Changes in this build:
            - Automated deployment from GitHub Actions
            - Commit: ${{ github.sha }}
      
      - name: Setup Google Play Publisher
        if: false # Disabled until Play Store credentials are set up
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.example.cold_drink_animated_ui
          releaseFiles: ./apk/app-release.apk
          track: internal
          status: completed